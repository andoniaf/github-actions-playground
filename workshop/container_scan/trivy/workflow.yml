# =============================================================================
# TRIVY CONTAINER SCAN JOB
# =============================================================================
#
# Trivy is a vulnerability scanner for container images and filesystems
# Repository: https://github.com/aquasecurity/trivy
#
# TO USE THIS JOB:
# 1. Copy this entire job definition into .github/workflows/build.yml
# 2. Replace the current jobs: definition with this one
# 3. This job will build the image, scan it with Trivy, and push it if scan passes
# 4. The scan will fail if CRITICAL or HIGH vulnerabilities are found
# =============================================================================

jobs:
  build:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.imageid }}
      tag: ${{ steps.meta.outputs.tags }}
      scan-result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./code
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
        continue-on-error: false

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.trivy.outcome }}" == "success" ]; then
            echo "result=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Container scan passed - no critical vulnerabilities found"
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            echo "‚ùå Container scan failed - critical vulnerabilities detected"
            exit 1
          fi

      - name: Log in to Container Registry
        if: steps.trivy.outcome == 'success'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        if: steps.trivy.outcome == 'success'
        uses: docker/build-push-action@v5
        with:
          context: ./code
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Summary
        if: always()
        run: |
          echo "üì¶ Build and Scan Summary:"
          echo "- Image built successfully: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "- Tags: ${{ steps.meta.outputs.tags }}"
          echo "- Image ID: ${{ steps.build.outputs.imageid }}"
          echo "- Security scan: ${{ steps.scan-result.outputs.result }}"
          if [ "${{ steps.trivy.outcome }}" == "success" ]; then
            echo "‚úÖ Build and scan completed - Image pushed to registry"
          else
            echo "‚ùå Build completed but scan failed - Image not pushed"
          fi
